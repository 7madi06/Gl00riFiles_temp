# non-login shell
set -g default-command "${SHELL}"

set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"

# cool screen saver
set -g lock-after-time 3000
set -g lock-command "cmatrix -s"

# Theme
source ~/.tmux/tmuxline/everforest-dark.tmux.conf

# faster key repetition
set -g escape-time 0

# Set the history limit so we get lots of scrollback.
set -g history-limit 50000000

# Set vi key bindings mode
set -g mode-keys vi
set -g status-keys vi

# Note: hold shift key to select the text using mouse
# turn mouse on
set -g mouse on
# Toggle mouse on
bind-key m \
    set -g mode-mouse on \;\
    set -g mouse-resize-pane on \;\
    set -g mouse-select-pane on \;\
    set -g mouse-select-window on \;\
    display 'Mouse: ON'
#
# Toggle mouse off
bind-key M \
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-pane off \;\
    set -g mouse-select-window off \;\
    display 'Mouse: OFF'

# Set new panes to open in current directory
bind-key c new-window -c "#{pane_current_path}"
bind-key '"' split-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"

# Indix Windows/Panes to 1, inestead of 0
set -g base-index 1
set-window-option -g pane-base-index 1

# monitor activities in other windows
set -g monitor-activity on
set -g visual-activity on

# Solve cursor problem in Neovim
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# statusline position
# set-option -g status-position top

# prefix key
unbind C-a
set -g prefix C-Space
bind-key C-Space send-prefix

# reload config file
bind-key -T prefix r source-file ~/.tmux.conf

# Clear-Screen
bind-key -n C-l clear-history

# window
bind-key -T prefix C-t new-window
bind-key -T prefix C-w unlink-window -k
bind-key -n C-left prev
bind-key -n C-right next
bind-key -n C-up swap-window -t -1
bind-key -n C-down swap-window -t +1
bind-key -T prefix C-s split-window
bind-key -T prefix C-v split-window -h

# Navigation btween vim/tmux windows/panes
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# swap windows with shift+arrow with prefix
bind-key S-Left swap-window -t -1
bind-key S-Right swap-window -t +1

# Rename + Creat a New window
unbind n  #DEFAULT KEY: Move to next window
unbind w  #DEFAULT KEY: change current window interactively
bind-key n command-prompt "rename-window '%%'"
bind-key w new-window -c "#{pane_current_path}"f

# Move around Windows using alt+k alt+j
bind-key -n M-k next-window # Next Window
bind-key -n M-j previous-window # Previous Window

# Moving around Panes '-n' bindings don't use prefix key
bind-key -n C-h select-pane -L
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
bind-key -n C-l select-pane -R
# kill-pane
bind-key -T prefix C-x kill-pane

# switch panes using Alt-arrow without prefix
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D

# resize panes
bind-key -r H resize-pane -L 5   # 5 px bigger to the left
bind-key -r J resize-pane -D 5   # 5 px bigger down
bind-key -r K resize-pane -U 5   # 5 px bigger up
bind-key -r L resize-pane -R 5   # 5 px bigger right

# switch between sessions
bind -r ( switch-client -p
bind -r ) switch-client -n

# remap copy paste keys
unbind [
bind-key y copy-mode
unbind p
bind-key p paste-buffer

# copy to system clipboard
bind-key C-c run "tmux save-buffer - | xclip -i -sel clipboard"
# paste from system clipboard
bind-key C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# bind y/v + using sys's clipboard
unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"`

# Copy and Paste useing vi-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggl

# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'sainnhe/tmux-net-speed'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'sainnhe/tmux-plugin-sysstat'
set -g @plugin 'toddyamakawa/tmux-scratchpad'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
run -b '~/.tmux/plugins/tpm/tpm'

# tmux-plugin-sysstat
set -g @sysstat_cpu_view_tmpl '#[fg=magenta] :#[default] #[fg=#{cpu.color}]#{cpu.pused}#[default]'
set -g @sysstat_mem_view_tmpl '#[fg=magenta] :#[default] #[fg=#{mem.color}]#{mem.pused}#[default]'
set -g status-interval 3

# tmux-prefix-highlight
set -g @prefix_highlight_fg 'colour00'
set -g @prefix_highlight_bg 'red'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=colour00,bg=colour05,bold'
set -g @prefix_highlight_prefix_prompt 'PREFIX'
set -g @prefix_highlight_copy_prompt 'COPY'

# tmux-fzf
TMUX_FZF_LAUNCH_KEY="C-Space"

# tmux-scratchpad
set-option -g @scratch-command-key 'Tab'
